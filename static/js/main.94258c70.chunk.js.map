{"version":3,"sources":["components/utils/arrToFEN.js","components/utils/initializeBoard.js","components/utils/isSolution.js","components/BruteforceBoard.js","components/BacktrackingBoard.js","App.js","index.js"],"names":["arrToFEN","board","counter","FENString","i","j","concat","initializeBoard","tempBoard","push","isSolution","m","BruteforceBoard","props","started","timeInterval","solutions","setSolutions","setStarted","queens","useRef","useState","current","setBoard","useEffect","timer","setTimeout","every","queen","console","log","includes","index","indexOf","JSON","parse","stringify","updateQueen","clearTimeout","calcWidth","screenWidth","screenHeight","Math","min","transitionDuration","position","showNotation","allowDrag","BacktrackingBoard","isEndArray","arr","tempArr","depth","isDone","App","algorithm","setAlgorithm","setTimeInterval","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","id","className","type","max","value","onChange","e","target","htmlFor","onClick","disabled","map","uniqid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94258c70.chunk.js","sourcesContent":["const arrToFEN = (board) => {\n  let counter = 0;\n  let FENString = \"\";\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if (board[i][j] === \"_\") counter++;\n      else {\n        if (counter !== 0) FENString = FENString.concat(counter);\n        FENString = FENString.concat(\"Q\");\n        counter = 0;\n      }\n    }\n    if (counter !== 0) {\n      FENString = FENString.concat(counter);\n      counter = 0;\n    }\n    if (i !== 7) FENString = FENString.concat(\"/\");\n  }\n  return FENString.concat(\" w - - 0 1\");\n};\n\nexport default arrToFEN;\n","const initializeBoard = () => {\n  let tempBoard = [];\n  for (let i = 0; i < 8; i++) {\n    tempBoard.push([]);\n    for (let j = 0; j < 8; j++) {\n      tempBoard[i].push(\"_\");\n    }\n  }\n  return tempBoard;\n};\n\nexport default initializeBoard;\n","const isSolution = (board) => {\n  let counter = 0;\n\n  // Check rows\n  //for (let i = 0; i < 8; i++) {\n  //if (!board[i].includes(\"X\")) return \"invalid\";\n  //}\n\n  // Check cols\n  for (let i = 0; i < 8; i++) {\n    counter = 0;\n    for (let j = 0; j < 8; j++) {\n      if (board[j][i] === \"X\") counter++;\n    }\n    if (counter > 1) return \"invalid\";\n  }\n\n  // Check diagonals\n  for (let i = 0; i < 8; i++) {\n    counter = 0;\n    let m = i;\n    for (let j = 0; j <= i; j++) {\n      if (board[m][j] === \"X\") counter++;\n      if (counter > 1) return \"invalid\";\n      m--;\n    }\n  }\n  for (let i = 7; i >= 0; i--) {\n    counter = 0;\n    let m = i;\n    for (let j = 7; j >= i; j--) {\n      if (board[m][j] === \"X\") counter++;\n      if (counter > 1) return \"invalid\";\n      m++;\n    }\n  }\n\n  // Check antidiagonals\n  for (let i = 7; i >= 0; i--) {\n    counter = 0;\n    let m = i;\n    for (let j = 0; j <= 7 - i; j++) {\n      if (board[m][j] === \"X\") counter++;\n      if (counter > 1) return \"invalid\";\n      m++;\n    }\n  }\n  for (let i = 0; i < 8; i++) {\n    counter = 0;\n    let m = i;\n    for (let j = 7; j >= 7 - i; j--) {\n      if (board[m][j] === \"X\") counter++;\n      if (counter > 1) return \"invalid\";\n      m--;\n    }\n  }\n\n  // count number of dudes\n  counter = 0;\n  for (let i = 0; i < 8; i++)\n    for (let j = 0; j < 8; j++) if (board[i][j] === \"X\") counter++;\n\n  if (counter === 8) return true;\n  else return false;\n};\n\nexport default isSolution;\n","import Chessboard from \"chessboardjsx\";\nimport { useState, useEffect, useRef } from \"react\";\nimport arrToFEN from \"./utils/arrToFEN.js\";\nimport initializeBoard from \"./utils/initializeBoard.js\";\nimport isSolution from \"./utils/isSolution.js\";\n\nconst BruteforceBoard = (props) => {\n  const { started, timeInterval, solutions, setSolutions, setStarted } = props;\n  let queens = useRef([0, 0, 0, 0, 0, 0, 0, 0]);\n  const [board, setBoard] = useState(\n    (() => {\n      const tempBoard = initializeBoard();\n      for (let i = 0; i < 8; i++) tempBoard[i][queens.current[i]] = \"X\";\n      return tempBoard;\n    })()\n  );\n  let tempBoard = useRef();\n\n  function updateQueen() {\n    if (queens.current.every((queen) => queen === 0)) console.log(\"START\");\n    if (queens.current.every((queen) => queen === 7)) {\n      setStarted(false);\n      queens.current = [0, 0, 0, 0, 0, 0, 0, 0];\n    } else {\n      queens.current[0]++;\n      while (queens.current.includes(8)) {\n        const index = queens.current.indexOf(8);\n        queens.current[index] = 0;\n        queens.current[index + 1]++;\n      }\n      tempBoard.current = initializeBoard();\n      for (let i = 0; i < 8; i++) tempBoard.current[i][queens.current[i]] = \"X\";\n      setBoard(JSON.parse(JSON.stringify(tempBoard.current)));\n      if (isSolution(board) === true)\n        setSolutions(solutions.concat(arrToFEN(board)));\n    }\n  }\n\n  useEffect(() => {\n    if (started) {\n      const timer = setTimeout(() => {\n        updateQueen();\n      }, timeInterval);\n      return () => clearTimeout(timer);\n    }\n  });\n\n  return (\n    <div>\n      <Chessboard\n        calcWidth={({ screenWidth, screenHeight }) =>\n          Math.min(\n            screenWidth < 700 ? screenWidth / 1.1 : screenWidth / 1.5,\n            screenHeight / 1.5\n          )\n        }\n        transitionDuration={0}\n        position={arrToFEN(board)}\n        showNotation={false}\n        allowDrag={() => false}\n      />\n    </div>\n  );\n};\n\nexport default BruteforceBoard;\n","import Chessboard from \"chessboardjsx\";\nimport { useState, useEffect, useRef } from \"react\";\nimport arrToFEN from \"./utils/arrToFEN.js\";\nimport initializeBoard from \"./utils/initializeBoard.js\";\nimport isSolution from \"./utils/isSolution.js\";\n\nconst BacktrackingBoard = (props) => {\n  const isEndArray = (arr) => {\n    const tempArr = [null, null, null, null, null, null, null, null];\n    for (let i = 0; i < 8; i++) if (arr[i] !== tempArr[i]) return false;\n    return true;\n  };\n\n  const { setStarted, started, timeInterval, solutions, setSolutions } = props;\n  let queens = useRef([null, null, null, null, null, null, null, null]);\n  const [board, setBoard] = useState(initializeBoard());\n  let tempBoard = useRef();\n  let depth = useRef(0);\n  let isDone = useRef(false);\n\n  function updateQueen() {\n    if (isEndArray(queens.current) && !isDone.current) {\n      isDone.current = true;\n    }\n    if (queens.current[depth.current] === null)\n      queens.current[depth.current] = 0;\n    else queens.current[depth.current]++;\n    tempBoard.current = initializeBoard();\n    for (let i = 0; i < 8; i++) tempBoard.current[i][queens.current[i]] = \"X\";\n    setBoard(JSON.parse(JSON.stringify(tempBoard.current)));\n    if (isSolution(tempBoard.current) === true)\n      setSolutions(solutions.concat(arrToFEN(tempBoard.current)));\n    else if (queens.current[depth.current] === 8) {\n      queens.current[depth.current] = null;\n      depth.current--;\n    } else if (isSolution(tempBoard.current) === false) depth.current++;\n  }\n\n  useEffect(() => {\n    if (started && !(isDone.current && isEndArray(queens.current))) {\n      const timer = setTimeout(() => {\n        updateQueen();\n      }, timeInterval);\n      return () => clearTimeout(timer);\n    } else {\n      setStarted(false);\n      isDone.current = false;\n    }\n  });\n\n  return (\n    <div>\n      <Chessboard\n        calcWidth={({ screenWidth, screenHeight }) =>\n          Math.min(\n            screenWidth <= 850 ? screenWidth / 1.1 : screenWidth / 1.5,\n            screenHeight / 1.5\n          )\n        }\n        transitionDuration={0}\n        position={arrToFEN(board)}\n        showNotation={false}\n        allowDrag={() => false}\n      />\n    </div>\n  );\n};\n\nexport default BacktrackingBoard;\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport uniqid from \"uniqid\";\nimport BruteforceBoard from \"./components/BruteforceBoard.js\";\nimport BacktrackingBoard from \"./components/BacktrackingBoard.js\";\nimport Chessboard from \"chessboardjsx\";\n\nconst App = () => {\n  const [solutions, setSolutions] = useState([]);\n  const [algorithm, setAlgorithm] = useState(\"blank\");\n  const [timeInterval, setTimeInterval] = useState(250);\n  const [started, setStarted] = useState(false);\n\n  const getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height,\n    };\n  };\n\n  const useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState(\n      getWindowDimensions()\n    );\n\n    useEffect(() => {\n      function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      }\n\n      window.addEventListener(\"resize\", handleResize);\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return windowDimensions;\n  };\n\n  return (\n    <div>\n      <div id=\"header\">\n        <h1>Eight Queens Visualizer</h1>\n      </div>\n\n      <div id=\"main-container\">\n        <div id=\"board-container\">\n          {algorithm === \"blank\" ? (\n            <Chessboard\n              calcWidth={({ screenWidth, screenHeight }) =>\n                Math.min(\n                  screenWidth <= 850 ? screenWidth / 1.1 : screenWidth / 1.5,\n                  screenHeight / 1.5\n                )\n              }\n              showNotation={false}\n            />\n          ) : null}\n          {algorithm === \"brute-force\" ? (\n            <BruteforceBoard\n              setStarted={setStarted}\n              started={started}\n              timeInterval={timeInterval}\n              solutions={solutions}\n              setSolutions={setSolutions}\n            />\n          ) : null}\n          {algorithm === \"backtracking\" ? (\n            <BacktrackingBoard\n              setAlgorithm={setAlgorithm}\n              setStarted={setStarted}\n              started={started}\n              timeInterval={timeInterval}\n              solutions={solutions}\n              setSolutions={setSolutions}\n            />\n          ) : null}\n        </div>\n\n        <div\n          id=\"controls-container\"\n          className={\n            useWindowDimensions().width <= 850\n              ? \"controls-container-small\"\n              : \"controls-container-big\"\n          }\n        >\n          <div id=\"range-container\">\n            <input\n              type=\"range\"\n              id=\"interval-range\"\n              min=\"1\"\n              max=\"500\"\n              value={timeInterval}\n              onChange={(e) => {\n                setTimeInterval(e.target.value);\n              }}\n            />\n            <label htmlFor=\"interval-range\">Speed</label>\n          </div>\n          <div id=\"start-stop-container\">\n            <button\n              className=\"start-button\"\n              onClick={() => {\n                setStarted(true);\n              }}\n              disabled={started === true}\n            >\n              Start\n            </button>\n            <button\n              className=\"stop-button\"\n              onClick={() => {\n                setStarted(false);\n              }}\n              disabled={started === false}\n            >\n              Stop\n            </button>\n          </div>\n          <div\n            id=\"algorithms-container\"\n            className={\n              useWindowDimensions().width <= 850\n                ? \"algorithms-container-small\"\n                : \"algorithms-container-big\"\n            }\n          >\n            <button\n              onClick={() => {\n                setAlgorithm(\"brute-force\");\n                setSolutions([]);\n              }}\n              disabled={algorithm === \"brute-force\" ? true : false}\n            >\n              Brute Force\n            </button>\n            <button\n              onClick={() => {\n                setAlgorithm(\"backtracking\");\n                setSolutions([]);\n              }}\n              disabled={algorithm === \"backtracking\" ? true : false}\n            >\n              Backtracking\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"solutions-container\">\n        {solutions.map((board, index) => (\n          <div key={uniqid()}>\n            <h2>Solution {index + 1}</h2>\n            <Chessboard\n              calcWidth={({ screenWidth }) =>\n                screenWidth <= 850 ? screenWidth / 2.5 : screenWidth / 4.9\n              }\n              position={board}\n              showNotation={false}\n              allowDrag={() => false}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}